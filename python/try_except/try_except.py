–û—Ç–ª–∏—á–Ω—ã–π –≤–æ–ø—Ä–æ—Å ‚Äî `try` / `except` ‚Äî **–æ–¥–∏–Ω –∏–∑ –≤–∞–∂–Ω–µ–π—à–∏—Ö –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ DevOps-–∏–Ω–∂–µ–Ω–µ—Ä–∞**,
–ø–æ—Ç–æ–º—É —á—Ç–æ –ª—é–±–∞—è –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—è (–±—É–¥—å —Ç–æ AWS —á–µ—Ä–µ–∑ `boto3`, SSH —á–µ—Ä–µ–∑ `paramiko` –∏–ª–∏ –¥–µ–ø–ª–æ–π —á–µ—Ä–µ–∑ `subprocess`) –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å **—É—Å—Ç–æ–π—á–∏–≤–∞ –∫ –æ—à–∏–±–∫–∞–º**.

---

# ‚öôÔ∏è –ë–ê–ó–ê: –ß—Ç–æ —Ç–∞–∫–æ–µ `try` / `except`

–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏—è `try` / `except` –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è **–æ–±—Ä–∞–±–æ—Ç–∫–∏ –∏—Å–∫–ª—é—á–µ–Ω–∏–π** ‚Äî —Å–∏—Ç—É–∞—Ü–∏–π, –∫–æ–≥–¥–∞ –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø–∞–¥–∞–µ—Ç —Å –æ—à–∏–±–∫–æ–π.
–í–º–µ—Å—Ç–æ ‚Äú–∫—Ä–∞—Å–Ω–æ–≥–æ —Ç—Ä–µ–π—Å–±—ç–∫–∞‚Äù –º–æ–∂–Ω–æ –æ—Ç—Ä–µ–∞–≥–∏—Ä–æ–≤–∞—Ç—å: –∑–∞–ø–∏—Å–∞—Ç—å –ª–æ–≥, –ø–æ–≤—Ç–æ—Ä–∏—Ç—å –¥–µ–π—Å—Ç–≤–∏–µ, —É–≤–µ–¥–æ–º–∏—Ç—å Slack –∏ —Ç.–¥.

---

## üß© –°–∏–Ω—Ç–∞–∫—Å–∏—Å:

```python
try:
    # –ö–æ–¥, –≥–¥–µ –≤–æ–∑–º–æ–∂–Ω–∞ –æ—à–∏–±–∫–∞
    risky_operation()
except SomeError:
    # –ß—Ç–æ –¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –æ—à–∏–±–∫–∞
    print("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞!")
```

---

## üîπ –ü—Ä–∏–º–µ—Ä:

```python
try:
    num = int(input("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ: "))
    print(10 / num)
except ValueError:
    print("–û—à–∏–±–∫–∞: –Ω—É–∂–Ω–æ –≤–≤–µ—Å—Ç–∏ —á–∏—Å–ª–æ!")
except ZeroDivisionError:
    print("–û—à–∏–±–∫–∞: –¥–µ–ª–µ–Ω–∏–µ –Ω–∞ –Ω–æ–ª—å!")
```

---

# üß† –ß—Ç–æ –¥–æ–ª–∂–µ–Ω –∑–Ω–∞—Ç—å DevOps

---

## 1. üéØ –õ–æ–≤–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –æ—à–∏–±–æ–∫

–ù–∏–∫–æ–≥–¥–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π –≥–æ–ª—ã–π `except:` ‚Äî —ç—Ç–æ ‚Äú–ø–æ–π–º–∞–µ—Ç –≤—Å—ë‚Äù (–≤–∫–ª—é—á–∞—è —Å–∏—Å—Ç–µ–º–Ω—ã–µ –æ—à–∏–±–∫–∏).
–õ—É—á—à–µ —É–∫–∞–∑—ã–≤–∞—Ç—å –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –∫–ª–∞—Å—Å—ã –æ—à–∏–±–æ–∫.

```python
import boto3
from botocore.exceptions import ClientError

try:
    s3 = boto3.client("s3")
    s3.create_bucket(Bucket="test-bucket")
except ClientError as e:
    print("–û—à–∏–±–∫–∞ AWS:", e.response["Error"]["Message"])
```

> ‚úÖ –¢–∞–∫ —Ç—ã –ø–æ–ª—É—á–∞–µ—à—å —Ç–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç AWS, –∞ –Ω–µ ‚Äú—É–ø–∞–≤—à–∏–π‚Äù —Å–∫—Ä–∏–ø—Ç.

---

## 2. ü™∂ –ë–ª–æ–∫ `else`

–ò—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è, **–µ—Å–ª–∏ –Ω–µ –±—ã–ª–æ –æ—à–∏–±–æ–∫**.

```python
try:
    print("–ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ...")
except ConnectionError:
    print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è")
else:
    print("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
```

---

## 3. üßπ –ë–ª–æ–∫ `finally`

–ò—Å–ø–æ–ª–Ω—è–µ—Ç—Å—è **–≤—Å–µ–≥–¥–∞**, –¥–∞–∂–µ –µ—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞.
–û–±—ã—á–Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è **–æ—á–∏—Å—Ç–∫–∏ —Ä–µ—Å—É—Ä—Å–æ–≤**: –∑–∞–∫—Ä—ã—Ç–∏—è —Ñ–∞–π–ª–æ–≤, —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π –∏ —Ç.–¥.

```python
file = open("log.txt", "w")
try:
    file.write("Start logging\n")
    raise ValueError("—á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫")
except ValueError:
    print("–û—à–∏–±–∫–∞ –∑–∞–ø–∏—Å–∏")
finally:
    file.close()  # –≥–∞—Ä–∞–Ω—Ç–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∑–∞–∫—Ä—ã—Ç–∏–µ —Ñ–∞–π–ª–∞
```

---

## 4. ü™£ –õ–æ–≤–ª—è –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –æ—à–∏–±–æ–∫

```python
try:
    risky_code()
except (OSError, ValueError) as e:
    print("–û—à–∏–±–∫–∞:", e)
```

---

## 5. ‚ö° –ü–æ–¥–Ω—è—Ç–∏–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –≤—Ä—É—á–Ω—É—é

–ï—Å–ª–∏ —Ç—ã —Ö–æ—á–µ—à—å **–ø—Ä–µ—Ä–≤–∞—Ç—å –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ** –∏ –ø–æ–∫–∞–∑–∞—Ç—å, —á—Ç–æ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫:

```python
if not os.path.exists("/etc/config.yaml"):
    raise FileNotFoundError("–ö–æ–Ω—Ñ–∏–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω!")
```

---

## 6. ü™™ –í–ª–æ–∂–µ–Ω–Ω—ã–µ try-except

```python
try:
    connect_to_server()
    try:
        send_data()
    except TimeoutError:
        print("–°–µ—Ä–≤–µ—Ä –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª.")
except ConnectionError:
    print("–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è.")
```

---

## 7. üìú –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ —Å –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ–º (`logging`)

–í DevOps-—Å–∫—Ä–∏–ø—Ç–∞—Ö **–æ—à–∏–±–∫–∏ –¥–æ–ª–∂–Ω—ã –ª–æ–≥–∏—Ä–æ–≤–∞—Ç—å—Å—è**, –∞ –Ω–µ –ø—Ä–æ—Å—Ç–æ –ø–µ—á–∞—Ç–∞—Ç—å—Å—è:

```python
import logging
from botocore.exceptions import ClientError

logging.basicConfig(filename='error.log', level=logging.ERROR)

try:
    ec2.start_instances(InstanceIds=['i-123456'])
except ClientError as e:
    logging.error("–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ EC2: %s", e)
```
