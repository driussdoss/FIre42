üåç –ú–æ–¥—É–ª—å requests ‚Äî –±–∞–∑–∞

requests ‚Äî —ç—Ç–æ —Å–∞–º—ã–π –ø–æ–ø—É–ª—è—Ä–Ω—ã–π –º–æ–¥—É–ª—å Python –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å HTTP-–∑–∞–ø—Ä–æ—Å–∞–º–∏.
–û–Ω –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è –æ–±—â–µ–Ω–∏—è —Å –≤–µ–±-—Å–µ—Ä–≤–µ—Ä–∞–º–∏, API, –º–∏–∫—Ä–æ—Å–µ—Ä–≤–∏—Å–∞–º–∏, DevOps-–∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–π (Slack, GitHub, Docker, –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ –∏ —Ç.–¥.).

üîπ –£—Å—Ç–∞–Ω–æ–≤–∫–∞
pip install requests

üîπ –ò–º–ø–æ—Ä—Ç
import requests

‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –º–µ—Ç–æ–¥—ã
–ú–µ—Ç–æ–¥	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
requests.get()	–ü–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ —Å —Å–µ—Ä–≤–µ—Ä–∞
requests.post()	–û—Ç–ø—Ä–∞–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
requests.put()	–û–±–Ω–æ–≤–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
requests.delete()	–£–¥–∞–ª–∏—Ç—å –¥–∞–Ω–Ω—ã–µ
requests.head()	–¢–æ–ª—å–∫–æ –∑–∞–≥–æ–ª–æ–≤–∫–∏ (–±–µ–∑ —Ç–µ–ª–∞)
requests.patch()	–ß–∞—Å—Ç–∏—á–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö
üìò –ü—Ä–æ—Å—Ç—ã–µ –ø—Ä–∏–º–µ—Ä—ã
1Ô∏è‚É£ GET-–∑–∞–ø—Ä–æ—Å (–ø–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö)
import requests

response = requests.get("https://api.github.com")

print(response.status_code)   # –ö–æ–¥ –æ—Ç–≤–µ—Ç–∞ (200, 404, 500)
print(response.headers)       # –ó–∞–≥–æ–ª–æ–≤–∫–∏
print(response.text)          # –¢–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (—Å—Ç—Ä–æ–∫–∞)

2Ô∏è‚É£ GET —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
import requests

params = {"q": "python", "sort": "stars"}
response = requests.get("https://api.github.com/search/repositories", params=params)

print(response.url)      # –ü–æ–ª–Ω—ã–π URL —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏
print(response.json())   # –û—Ç–≤–µ—Ç –≤ —Ñ–æ—Ä–º–∞—Ç–µ JSON (–∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω)

3Ô∏è‚É£ POST (–æ—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö)
import requests

data = {"username": "walter", "password": "1234"}
response = requests.post("https://httpbin.org/post", data=data)

print(response.json())

4Ô∏è‚É£ –û—Ç–ø—Ä–∞–≤–∫–∞ JSON
import requests

payload = {"name": "John", "age": 30}
response = requests.post("https://httpbin.org/post", json=payload)

print(response.json())

5Ô∏è‚É£ –ó–∞–≥–æ–ª–æ–≤–∫–∏ (headers)
headers = {"Authorization": "Bearer my-token"}
r = requests.get("https://api.example.com/data", headers=headers)

6Ô∏è‚É£ –†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏
files = {"file": open("report.txt", "rb")}
r = requests.post("https://httpbin.org/post", files=files)
print(r.status_code)

7Ô∏è‚É£ –¢–∞–π–º–∞—É—Ç
r = requests.get("https://example.com", timeout=5)


‚ö†Ô∏è –ï—Å–ª–∏ —Å–∞–π—Ç –Ω–µ –æ—Ç–≤–µ—Ç–∏—Ç –∑–∞ 5 —Å–µ–∫—É–Ω–¥ ‚Äî requests.exceptions.Timeout

8Ô∏è‚É£ –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ—à–∏–±–æ–∫
r = requests.get("https://example.com/notfound")

if r.status_code == 404:
    print("–°—Ç—Ä–∞–Ω–∏—Ü–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")


–∏–ª–∏ —Ç–∞–∫:

r.raise_for_status()  # –≤—ã–±—Ä–æ—Å–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ, –µ—Å–ª–∏ –∫–æ–¥ != 200

9Ô∏è‚É£ –°–µ—Å—Å–∏–∏ (—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ cookie / headers)
s = requests.Session()
s.headers.update({"User-Agent": "DevOps-Script"})
s.get("https://httpbin.org/cookies/set/sessionid/123")
r = s.get("https://httpbin.org/cookies")
print(r.text)

üîü –°–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞
url = "https://example.com/file.zip"
r = requests.get(url)

with open("file.zip", "wb") as f:
    f.write(r.content)

üß≠ –ß—Ç–æ —Ç–∞–∫–æ–µ DELETE

DELETE ‚Äî HTTP-–º–µ—Ç–æ–¥ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ä–µ—Å—É—Ä—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä –∑–∞–ø–∏—Å—å, —Ñ–∞–π–ª, –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä).
–í–∞–∂–Ω–æ –ø–æ–º–Ω–∏—Ç—å: –ø–æ–≤–µ–¥–µ–Ω–∏–µ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç API ‚Äî –æ–±—ã—á–Ω–æ DELETE –∏–¥–µ–º–ø–æ—Ç–µ–Ω—Ç–µ–Ω (–ø–æ–≤—Ç–æ—Ä–Ω—ã–π –≤—ã–∑–æ–≤ –¥–∞—ë—Ç —Ç–æ—Ç –∂–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç).

–¢–∏–ø–∏—á–Ω—ã–µ –∫–æ–¥—ã –æ—Ç–≤–µ—Ç–∞:

200 OK ‚Äî –≤–æ–∑–≤—Ä–∞—â—ë–Ω –æ—Ç–≤–µ—Ç/—Ç–µ–ª–æ,

202 Accepted ‚Äî —É–¥–∞–ª–µ–Ω–∏–µ –≤ –æ—á–µ—Ä–µ–¥–∏/–∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ,

204 No Content ‚Äî —É—Å–ø–µ—à–Ω–æ, —Ç–µ–ª–æ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç,

401/403 ‚Äî –Ω–µ—Ç –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏/–¥–æ—Å—Ç—É–ø–∞,

404 ‚Äî —Ä–µ—Å—É—Ä—Å –Ω–µ –Ω–∞–π–¥–µ–Ω.

üîê –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å –∏ –Ω—é–∞–Ω—Å—ã

–ú–Ω–æ–≥–∏–µ API –ù–ï –ø—Ä–∏–Ω–∏–º–∞—é—Ç —Ç–µ–ª–æ (body) –≤ DELETE ‚Äî –ø—Ä–æ–≤–µ—Ä—å —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é.

–í—Å–µ–≥–¥–∞ –ø—Ä–æ–≤–µ—Ä—è–π –ø—Ä–∞–≤–∞ (auth) –∏ CSRF –¥–ª—è –±—Ä–∞—É–∑–µ—Ä–Ω—ã—Ö –≤—ã–∑–æ–≤–æ–≤.

–ù–∞ –ø—Ä–æ–¥–µ –æ–±—ã—á–Ω–æ –¥–µ–ª–∞—é—Ç soft-delete –∏–ª–∏ —Ç—Ä–µ–±—É—é—Ç confirm=true / dry-run —Ñ–ª–∞–≥.

–ò—Å–ø–æ–ª—å–∑—É–π —Ç–∞–π–º–∞—É—Ç—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫.

‚öôÔ∏è –ü—Ä–∏–º–µ—Ä—ã (–∫–æ—Ä–æ—Ç–∫–æ, —Ä–∞–±–æ—á–∏–µ)
1) –ü—Ä–æ—Å—Ç–æ–π DELETE –ø–æ id
import requests

url = "https://api.example.com/items/123"
resp = requests.delete(url, timeout=5)

print(resp.status_code)        # –Ω–∞–ø—Ä–∏–º–µ—Ä 204
print(resp.ok)                 # True –µ—Å–ª–∏ –∫–æ–¥ < 400
if resp.status_code == 204:
    print("–£–¥–∞–ª–µ–Ω–æ —É—Å–ø–µ—à–Ω–æ (No Content)")
else:
    print(resp.text)           # —Ç–µ–ª–æ –æ—Ç–≤–µ—Ç–∞ (–µ—Å–ª–∏ –µ—Å—Ç—å)

2) DELETE —Å Bearer-—Ç–æ–∫–µ–Ω–æ–º (Authorization header)
import requests

url = "https://api.example.com/items/123"
headers = {"Authorization": "Bearer YOUR_TOKEN"}
resp = requests.delete(url, headers=headers, timeout=5)
resp.raise_for_status()   # –≤—ã–±—Ä–æ—Å–∏—Ç –∏—Å–∫–ª—é—á–µ–Ω–∏–µ –ø—Ä–∏ –æ—à–∏–±–∫–µ

3) DELETE —Å Basic Auth
from requests.auth import HTTPBasicAuth
import requests

url = "https://api.example.com/resource/45"
resp = requests.delete(url, auth=HTTPBasicAuth("user", "pass"), timeout=5)
print(resp.status_code)

4) DELETE —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (query params), –Ω–∞–ø—Ä–∏–º–µ—Ä –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –∏–ª–∏ dry-run
import requests

url = "https://api.example.com/items/123"
params = {"confirm": "true"}   # –∏–ª–∏ dry_run=true
resp = requests.delete(url, params=params, timeout=5)
print(resp.url)    # –ø–æ–∫–∞–∂–µ—Ç –ø–æ–ª–Ω—ã–π URL —Å ?confirm=true
print(resp.status_code)

5) DELETE —Å JSON body (—Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ API —ç—Ç–æ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç)
import requests

url = "https://api.example.com/bulk-delete"
payload = {"ids": [1, 2, 3]}
# –ù–µ–∫–æ—Ç–æ—Ä—ã–µ API –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç —Ç–µ–ª–æ –≤ DELETE, –º–Ω–æ–≥–∏–µ ‚Äî –Ω–µ—Ç
resp = requests.delete(url, json=payload, timeout=10)
print(resp.status_code, resp.text)

6) –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ Session (–ø–æ–≤—Ç–æ—Ä–Ω—ã–µ –∑–∞–ø—Ä–æ—Å—ã, –æ–±—â–∏–µ –∑–∞–≥–æ–ª–æ–≤–∫–∏)
import requests

s = requests.Session()
s.headers.update({"Authorization": "Bearer TOKEN", "User-Agent": "monitor/1.0"})

resp = s.delete("https://api.example.com/items/123", timeout=5)
print(resp.status_code)

7) –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫ –∏ —Ç–∞–π–º–∞—É—Ç–æ–≤
import requests

try:
    resp = requests.delete("https://api.example.com/items/123", timeout=3)
    resp.raise_for_status()
except requests.exceptions.Timeout:
    print("–¢–∞–π–º–∞—É—Ç –ø—Ä–∏ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–∏")
except requests.exceptions.HTTPError as e:
    print("HTTP –æ—à–∏–±–∫–∞:", e, resp.status_code)
except requests.exceptions.RequestException as e:
    print("–û—à–∏–±–∫–∞ –∑–∞–ø—Ä–æ—Å–∞:", e)

8) –õ–æ–≥–≥–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ (DevOps-–ø–∞—Ç—Ç–µ—Ä–Ω)
import requests, logging

logging.basicConfig(level=logging.INFO)
url = "https://api.example.com/items/123"

resp = requests.delete(url, timeout=5)
if resp.ok:
    logging.info("DELETE %s -> %s", url, resp.status_code)
else:
    logging.error("DELETE %s failed -> %s %s", url, resp.status_code, resp.text)

‚úÖ –ö—Ä–∞—Ç–∫–∏–µ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ (—á–µ–∫–ª–∏—Å—Ç –ø–µ—Ä–µ–¥ DELETE)

–ü—Ä–æ–≤–µ—Ä—å —Å–ø–µ—Ü–∏—Ñ–∏–∫–∞—Ü–∏—é API ‚Äî –ø—Ä–∏–Ω–∏–º–∞–µ—Ç –ª–∏ DELETE —Ç–µ–ª–æ.

–ò—Å–ø–æ–ª—å–∑—É–π –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é (headers / auth).

–î–µ–ª–∞–π timeout.

–õ–æ–≥–∏—Ä—É–π –æ—Ç–≤–µ—Ç –∏ –∫–æ–¥ –≤–æ–∑–≤—Ä–∞—Ç–∞.

–ù–∞ –ø—Ä–æ–¥–∞–∫—à–Ω–µ –¥–æ–±–∞–≤—å confirm/dry-run –∏–ª–∏ soft-delete.

–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–π –∏—Å–∫–ª—é—á–µ–Ω–∏—è (requests.exceptions.RequestException).
