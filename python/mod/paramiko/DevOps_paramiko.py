üß≠ –ß—Ç–æ —Ç–∞–∫–æ–µ Paramiko

Paramiko ‚Äî —ç—Ç–æ —á–∏—Å—Ç–æ-–ø–∏—Ç–æ–Ω–æ–≤—Å–∫–∞—è —Ä–µ–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–æ—Ç–æ–∫–æ–ª–æ–≤ SSHv2 –∏ SFTP,
–∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å —É–¥–∞–ª—ë–Ω–Ω—ã–º–∏ Linux/Unix –º–∞—à–∏–Ω–∞–º–∏ –ø—Ä–æ–≥—Ä–∞–º–º–Ω–æ (–±–µ–∑ –ø—Ä—è–º–æ–≥–æ ssh –≤ —Ç–µ—Ä–º–∏–Ω–∞–ª–µ).

üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞:

pip install paramiko

‚öôÔ∏è –û—Å–Ω–æ–≤–Ω—ã–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏
–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å	–û–ø–∏—Å–∞–Ω–∏–µ
üîë SSH-–∫–ª–∏–µ–Ω—Ç	–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ SSH –∏ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥
üìÇ SFTP	–ü–µ—Ä–µ–¥–∞—á–∞ —Ñ–∞–π–ª–æ–≤ (upload/download)
üß∞ Key-based auth	–ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –ø–æ –ø—Ä–∏–≤–∞—Ç–Ω–æ–º—É –∫–ª—é—á—É
üß± –¢—É–Ω–Ω–µ–ª–∏—Ä–æ–≤–∞–Ω–∏–µ	(—Ä–µ–∂–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è) –ø–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø–æ—Ä—Ç–æ–≤
üñ•Ô∏è SSH-—Å–µ—Ä–≤–µ—Ä	–ú–æ–∂–Ω–æ —Å–æ–∑–¥–∞—Ç—å —Å–≤–æ–π –º–∏–Ω–∏ SSH-—Å–µ—Ä–≤–µ—Ä (—Ä–µ–¥–∫–æ –≤ DevOps)
üß© –û—Å–Ω–æ–≤–Ω—ã–µ –æ–±—ä–µ–∫—Ç—ã –∏ –∫–ª–∞—Å—Å—ã
–ö–ª–∞—Å—Å	–ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ
paramiko.SSHClient()	–û—Å–Ω–æ–≤–Ω–æ–π –∫–ª–∏–µ–Ω—Ç –¥–ª—è SSH
paramiko.AutoAddPolicy()	–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ host key
paramiko.RSAKey, Ed25519Key	–†–∞–±–æ—Ç–∞ —Å –∫–ª—é—á–∞–º–∏
paramiko.SFTPClient()	–†–∞–±–æ—Ç–∞ —Å —Ñ–∞–π–ª–∞–º–∏ –ø–æ SFTP
paramiko.Transport()	–ù–∏–∑–∫–æ—É—Ä–æ–≤–Ω–µ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ (–∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤–Ω—É—Ç—Ä–∏ SSHClient)
üîê –ü—Ä–∏–º–µ—Ä 1. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ –ª–æ–≥–∏–Ω—É –∏ –ø–∞—Ä–æ–ª—é
import paramiko

ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())  # –∞–≤—Ç–æ-–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–π

ssh.connect(
    hostname="192.168.1.10",
    username="ubuntu",
    password="1234",
    port=22
)

stdin, stdout, stderr = ssh.exec_command("uname -a")
print(stdout.read().decode())

ssh.close()


üí° –¢–∞–∫ –º–æ–∂–Ω–æ –ø–æ–ª—É—á–∏—Ç—å —Å–∏—Å—Ç–µ–º–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é, –ª–æ–≥–∏, —Å—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤ –∏ —Ç.–¥.

üîë –ü—Ä–∏–º–µ—Ä 2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –ø–æ –∫–ª—é—á—É (–±–µ–∑ –ø–∞—Ä–æ–ª—è)
import paramiko

ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())

ssh.connect(
    hostname="192.168.1.10",
    username="ubuntu",
    key_filename="/home/user/.ssh/id_rsa"
)

stdin, stdout, stderr = ssh.exec_command("df -h")
print(stdout.read().decode())

ssh.close()


üí° –û–±—ã—á–Ω–æ DevOps-–∏–Ω–∂–µ–Ω–µ—Ä—ã –∏—Å–ø–æ–ª—å–∑—É—é—Ç –∏–º–µ–Ω–Ω–æ key-based auth (–∞ –Ω–µ –ø–∞—Ä–æ–ª–∏).

üßæ –ü—Ä–∏–º–µ—Ä 3. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –Ω–µ—Å–∫–æ–ª—å–∫–∏—Ö –∫–æ–º–∞–Ω–¥ –ø–æ–¥—Ä—è–¥
commands = [
    "hostname",
    "uptime",
    "free -h"
]

for cmd in commands:
    stdin, stdout, stderr = ssh.exec_command(cmd)
    print(f"[{cmd}]")
    print(stdout.read().decode().strip())

üìÇ –ü—Ä–∏–º–µ—Ä 4. –ó–∞–≥—Ä—É–∑–∫–∞ –∏ —Å–∫–∞—á–∏–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–æ–≤ (SFTP)
import paramiko

ssh = paramiko.SSHClient()
ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
ssh.connect("192.168.1.10", username="ubuntu", key_filename="~/.ssh/id_rsa")

sftp = ssh.open_sftp()
sftp.get("/remote/path/app.log", "app.log")        # —Å–∫–∞—á–∞—Ç—å
sftp.put("local_script.sh", "/remote/path/script.sh")  # –∑–∞–≥—Ä—É–∑–∏—Ç—å
sftp.close()

ssh.close()

‚öôÔ∏è –ü—Ä–∏–º–µ—Ä 5. –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã —Å –≤–æ–∑–≤—Ä–∞—Ç–æ–º –∫–æ–¥–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
stdin, stdout, stderr = ssh.exec_command("systemctl restart nginx")
exit_status = stdout.channel.recv_exit_status()

if exit_status == 0:
    print("Nginx –ø–µ—Ä–µ–∑–∞–ø—É—â–µ–Ω —É—Å–ø–µ—à–Ω–æ")
else:
    print("–û—à–∏–±–∫–∞:", stderr.read().decode())

ü™Ñ –ü–æ–ª–µ–∑–Ω—ã–µ –ø—Ä–∏—ë–º—ã –¥–ª—è –ø–æ–Ω–∏–º–∞–Ω–∏—è
‚úÖ 1. –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω—ã–π –º–µ–Ω–µ–¥–∂–µ—Ä (–∞–≤—Ç–æ-–∑–∞–∫—Ä—ã—Ç–∏–µ)
from paramiko import SSHClient, AutoAddPolicy

with SSHClient() as ssh:
    ssh.set_missing_host_key_policy(AutoAddPolicy())
    ssh.connect("192.168.1.10", username="ubuntu", key_filename="~/.ssh/id_rsa")
    stdin, stdout, stderr = ssh.exec_command("uptime")
    print(stdout.read().decode())

‚úÖ 2. –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–ø–∏—Å–∫—É —Å–µ—Ä–≤–µ—Ä–æ–≤
servers = ["192.168.1.10", "192.168.1.11"]

for host in servers:
    with paramiko.SSHClient() as ssh:
        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
        ssh.connect(host, username="ubuntu", key_filename="~/.ssh/id_rsa")
        stdin, stdout, _ = ssh.exec_command("uptime")
        print(f"{host}: {stdout.read().decode().strip()}")

‚úÖ 3. –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫
import paramiko

try:
    ssh.connect("192.168.1.100", username="root", password="1234")
except paramiko.AuthenticationException:
    print("–û—à–∏–±–∫–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏")
except paramiko.SSHException as e:
    print("–û—à–∏–±–∫–∞ SSH:", e)
except Exception as e:
    print("–î—Ä—É–≥–∞—è –æ—à–∏–±–∫–∞:", e)

